
highlight Cursor guifg=white guibg=black
highlight iCursor guifg=white guibg=steelblue
set guicursor=n-v-c:block-Cursor
set guicursor+=i:ver100-iCursor
set guicursor+=n-v-c:blinkon0
set guicursor+=i:blinkwait10

"---------------------------------------------------------------------------------
"begin: Vundle plugin manager   Fri Sep 25 16:07:16 PDT 2015
"---------------------------------------------------------------------------------
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Bundle 'mattn/webapi-vim'
Bundle 'mattn/gist-vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"---------------------------------------------------------------------------------
"end Vundle plugin manager
"---------------------------------------------------------------------------------

let g:clang_library_path='/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib'
syntax enable
"set background=light 
"colorscheme solarized
colorscheme default 
hi search ctermbg=Gray ctermfg=Brown

"For Align
filetype plugin on

set hls
set omnifunc=csscomplete#CompleteCSS
set autoindent
set nocp
set ruler
set tabstop=4
set shiftwidth=4
set expandtab
set showcmd
set nobackup
set nowritebackup
set noswapfile 
set autochdir
set backspace=2
set dictionary=/home/user/.vim/myword/myword.txt

cabbr svim :source ~/.vimrc

set pastetoggle=<F4>
map <F9> :e!<CR>
map <F8> :res +15 <CR> 
map <F7> :res -15 <CR> 
map <F3> :tabn <CR> 
map <F2> :tabp <CR>
imap <F3> <Esc> :tabn <CR> 
imap <F2> <Esc> :tabp <CR>
map <F1> :tabnew <CR>

map ,nl :.,$s/\S.*\S/\0<br>/gc <bar> :nohlsearch <CR>
map ,n :nohlsearch <CR>
map ,w :w!<CR>
map ,l :.,.s/\S.*\S$/\\[ \0 \\]/gc <bar> :nohlsearch <CR>
map ,, :.,$s/\S.*\S/\0\<br>/gc <bar> :nohlsearch <CR>
vnoremap <buffer><Leader>, :s/\%'<.*\%'>./\[\0\]/gc <CR>
imap ,w OQ  :w! <CR>

"[:h map-expression] [:h repeat]
iabbr <expr> gi  '<code data-gist-id="49533cf8014ea9b2eb34"></code>' .  "\<Esc>" . repeat('h', 30) 
iabbr <expr> ee  '\[   \]' .  "\<Esc>" . repeat('h', 4) 
iabbr <expr> txx '\text{}' . "\<Esc>" . repeat('h', 2)
iabbr <expr> fraa '\frac{}{}' . "\<Esc>" . repeat('h', 4)
iabbr <expr> dt   '<div style="color:red;font-size:18px;">' . strftime("%c") . '</div><br>'

iabbr cc \mathbb{C}
iabbr qq \mathbb{Q}
iabbr nn \mathbb{N}
iabbr rr \mathbb{R}
iabbr gro $(\mathbb{N}, +)$
iabbr cml <p><CR>$\Large \color{red}\lambda$ 
        \<CR>Rename file name of default screenshots in Mac OSX, Open your Terminal and type:<br><br>
        \<CR><span style="color:#FFF; background:#000;border-radius:3px; padding:2px;">  
        \<CR>defaults write com.apple.screencapture name "myName"<br>
        \<CR></span><br>
        \<CR>And type:<br><br>
        \<CR><span style="color:#FFF; background:#000;border-radius:3px; padding:2px;">  
        \<CR>killall SystemUIServer
        \<CR></span> 
        \<CR></p>

iabbr grl \[
        \<CR>\alpha        \theta                  \tau       \\ 
        \<CR>\beta         \vartheta    \pi          \upsilon \\ 
        \<CR>\gamma        \gamma       \varpi       \phi     \\ 
        \<CR>\delta        \kappa       \rho         \varphi  \\ 
        \<CR>\epsilon      \lambda      \varrho      \chi     \\ 
        \<CR>\varepsilon   \mu          \sigma       \psi     \\ 
        \<CR>\zeta         \nu          \varsigma    \omega   \\ 
        \<CR>\eta          \xi                                \\ 
        \<CR>                                                 \\ 
        \<CR>\Gamma        \Lambda      \Sigma       \Psi     \\ 
        \<CR>\Delta                  \Upsilon     \Omega      \\ 
        \<CR>\Theta        \Pi          \Phi
        \<CR>\]
iabbr grtau $\Huge \color{red}\tau$ 
iabbr lmapq $\phi: \mathbb{Q} \rightarrow \mathbb{Q}$  
iabbr lmapr $\phi: \polyringr{x} \rightarrow  \polyringr{x}$ 
iabbr lmapn $\phi: \polyringn{x} \rightarrow  \polyringn{x}$ 
iabbr lmapc $\phi: \mathbb{C} \rightarrow \mathbb{C}$  

iabbr ma \begin{bmatrix}
        \<CR>1 & 2  & 3 \\
        \<CR>4 & 5  & 6 \\
        \<CR>7 & 8  & 9 \\
        \<CR>\end{bmatrix}

iabbr blo NSString* (^myBlock)(int) = ^(int num) { 
        \<CR>   return num*num; 
        \<CR>};

iabbr xpp [path moveToPoint:CGPointMake(location.x, location.y)];
        \<CR>[path addLineToPoint:CGPointMake(location.x + width, location.y)];
        \<CR>[path addLineToPoint:CGPointMake(location.x + width, location.y + height)];
        \<CR>[path addLineToPoint:CGPointMake(location.x, location.y + height)];
        \<CR>[path addLineToPoint:CGPointMake(location.x, location.y)];

iabbr xcc blackColor 
        \<CR>darkGrayColor 
        \<CR>lightGrayColor
        \<CR>whiteColor
        \<CR>grayColor
        \<CR>redColor
        \<CR>greenColor
        \<CR>blueColor
        \<CR>cyanColor
        \<CR>yellowColor
        \<CR>magentaColor
        \<CR>orangeColor
        \<CR>purpleColor
        \<CR>brownColor
        \<CR>clearColor

iabbr hhh =Hello()<CR> 
iabbr kkk ListMonth()
iabbr timm [NSTimer scheduledTimerWithTimeInterval:self.delayInterval
        \<CR>target:self
        \<CR>selector:@selector(suspendDisplay:)<CR>userInfo:nil<CR>repeats:NO];<CR><CR>-(void)suspendDisplay:(NSTimer*)timer{<CR>}

iabbr imav UIImageView* _imageView; 
                    \<CR>@property (nonatomic, retain) UIImageView* imageView;
                    \<CR>@synthesize imageView = _imageView;
                    \<CR>self.imageView = [[UIImageView alloc]initWithFrame:self.window.bounds];
                    \<CR>self.imageView.image=[UIImage imageNamed:@"myimage.jpg"];
                    \<CR>[self.window addSubview:self.imageView];

iabbr labb UILabel *myLabel = [[UILabel alloc] initWithFrame:CGRectMake(50, 50, 300, 300)];
                \<CR>[myLabel setTextColor:[UIColor redColor]];
                \<CR>[myLabel setBackgroundColor:[UIColor clearColor]];
                \<CR>[myLabel setFont:[UIFont fontWithName: @"Trebuchet MS" size: 20.0f]];
                \<CR>[myLabel setText:@"Supper Simple Application"];
                \<CR>[self.window addSubview:myLabel];
iabbr xss [%S]
iabbr xdd [%d]
iabbr xff [%f]
iabbr nsa NSLog(@"num1=[%f] num2=[%f]", num1, num2); <CR>NSLog(@"num1=[%d] num2=[%d]", num1, num2); 
iabbr nsd NSLog(@"num1=[%d] num2=[%d]", num1, num2); 
iabbr nsf NSLog(@"num1=[%f] num2=[%f]", num1, num2); 
iabbr ns NSLog(@"%s", __PRETTY_FUNCTION__);
iabbr crr \<CR>
iabbr tt3 public static void test3()<CR>{<CR>}
iabbr tt2 public static void test2()<CR>{<CR>}
iabbr tt1 public static void test1()<CR>{<CR>}

iabbr mn String name = new Object(){}.getClass().getEnclosingMethod().getName();
        \<CR>System.out.println("{"+name + "}");

iabbr 2ar int height = 1; 
        \<CR>int width = 2;
        \<CR>int[][] = new int[height][width];



iabbr pub public static void print(int[][] arr, int height, int width)
iabbr bb <br>
iabbr apa <span style="color:#FFF; background:#000;border-radius:3px; padding:2px;">
          \<CR></span>

iabbr tab   <table>
            \<CR><tbody>
            \<CR><tr>
            \<CR><td>Jim</td>
            \<CR><td>00001</td>
            \<CR><td>Blue</td>
            \<CR></tr>
            \<CR><tr>
            \<CR><td>Sue</td>
            \<CR><td>00002</td>
            \<CR><td>Red</td>
            \<CR></tr>
            \<CR><tr>
            \<CR><td>Barb</td>
            \<CR><td>00003</td>
            \<CR><td>Green</td>
            \<CR></tr>
            \<CR></tbody>
            \<CR></table>
iabbr divv <div style="text-align:center">
      \<CR></div>

abbr im <img src="../image/rotatedarrayfigure.svg" width="100%" height="100%" /><br>
abbr co <?php include("../colorhtml/java/multiply.html"); ?>
abbr ep </span>
abbr sp <span style="color:#FF00EE">

cabbr todo :tabnew ~/myfile/todo/todo.txt 
cabbr note :tabnew ~/myfile/github/note/note.html 
cabbr sess :mksession! ~/.vim/session/sess.vim 
cabbr vimrc :e ~/.vimrc
cabbr svim :source ~/.vimrc
cabbr me :g/[-+]\s*(\w\+\s*\*\?)\s*\w\+/z#.1
cabbr vc :tabnew ~/.vimrc


autocmd FileType objc    nnoremap <buffer><localleader>c I//<Esc>

autocmd FileType haskell iabbre fb --[file=file.html   title=""
autocmd FileType haskell iabbre fe --]
autocmd FileType java iabbre fb //[file=file.html   title=""
autocmd FileType java iabbre fe //]


autocmd FileType java iabbr prr System.out.println();
autocmd FileType python set omnifunc=pythoncomplete#Complete

"autocmd FileType html iabbr colo <h3><?php include("../colorhtml/java/PermuteJava.html"); ?></h3> 
autocmd FileType html iabbr <buffer> colo "dog" 
autocmd FileType tex abbr re \color{red}

autocmd FileType cpp iabbr for2 for(int i=0; i<col; i++) 
                                \<CR>for(int j=0; j<row; j++)
                                    \<CR>printf(@"%s [%d]", array[i][j]);

autocmd FileType cpp iabbr forr for(int i=0; i<len; i++)
                                \<CR>printf(@"%s [%d]", array[i]); 

autocmd FileType objc iabbr forr for(int i=0; i<[array count]; i++)
                                \<CR>NSLog(@"%s [%d]", __PRETTY_FUNCTION__, [array objectAtIndex:i]); 

autocmd FileType objc iabbr <buffer> ar3     NSUInteger const INDEX = 5;
                                        \<CR>NSUInteger const COL = 4;
                                        \<CR>NSUInteger const ROW = 4;
                                        \<CR>int array[INDEX][COL][ROW] = {
                                        \<CR>{{1, 1, 1, 1},
                                        \<CR>{1, 1, 0, 0},
                                        \<CR>{1, 0, 1, 0},
                                        \<CR>{1, 0, 0, 0}
                                        \<CR>},
                                        \<CR>{{1, 0, 1, 1},
                                        \<CR>{1, 0, 1, 1},
                                        \<CR>{1, 0, 0, 0},
                                        \<CR>{1, 0, 0, 0}
                                        \<CR>},
                                        \<CR>{{1, 0, 0, 0},
                                        \<CR>{1, 1, 0, 0},
                                        \<CR>{1, 1, 1, 1},
                                        \<CR>{1, 0, 0, 0}
                                        \<CR>},
                                        \<CR>{{1, 0, 1, 1},
                                        \<CR>{1, 0, 0, 1},
                                        \<CR>{1, 0, 1, 1},
                                        \<CR>{1, 0, 0, 1}
                                        \<CR>},
                                        \<CR>{{1, 1, 0, 0},
                                        \<CR>{1, 0, 0, 0},
                                        \<CR>{1, 1, 0, 1},
                                        \<CR>{1, 0, 0, 0}
                                        \<CR>}
                                        \<CR>};


autocmd FileType java iabbr <buffer> ar2 int[][] arr = {{1, 2, 3},
                                                    \<CR>{4, 5, 6},
                                                    \<CR>{7, 8, 9}
                                                    \<CR>};

autocmd FileType objc iabbr <buffer> ar2 int arr[][] = {{1, 2, 3},
                                                    \<CR>{4, 5, 6},
                                                    \<CR>{7, 8, 9}
                                                    \<CR>};


autocmd FileType objc iabbr <buffer> ar1 int arr1[] = {1, 2, 3};<CR>

autocmd FileType tex nnoremap <buffer> <F10>  :!pdflatex % <CR> :!open -a /Applications/Adobe\ Acrobat\ Reader\ DC.app/Contents/MacOS/AdobeReader matrix.pdf <CR>

" compile latex

"map  <F10> :!pdflatex % <CR> :!open -a /Applications/Adobe\ Acrobat\ Reader\ DC.app/Contents/MacOS/AdobeReader idea.pdf <CR>

" Vim >= 7.0 specific colors
if version >= 700
  hi CursorLine guibg=#2d2d2d
  hi CursorColumn guibg=#2d2d2d
  hi MatchParen guifg=#f6f3e8 guibg=#857b6f gui=bold
  hi Pmenu 		guifg=#f6f3e8 guibg=#444444
  hi PmenuSel 	guifg=#000000 guibg=#cae682
endif

"follwoing color will overwrite the colorscheme
" General colors
"hi Cursor 		guifg=NONE    guibg=#656565 gui=none
"hi Normal 		guifg=#f6f3e8 guibg=#242424 gui=none
"hi NonText 		guifg=#808080 guibg=#303030 gui=none
"hi LineNr 		guifg=#857b6f guibg=#000000 gui=none
"hi StatusLine 	guifg=#f6f3e8 guibg=#444444 gui=italic
"hi StatusLineNC guifg=#857b6f guibg=#444444 gui=none
"hi VertSplit 	guifg=#444444 guibg=#444444 gui=none
"hi Folded 		guibg=#384048 guifg=#a0a8b0 gui=none
"hi Title		guifg=#f6f3e8 guibg=NONE	gui=bold
"hi Visual		guifg=#f6f3e8 guibg=#444444 gui=none
"hi SpecialKey	guifg=#808080 guibg=#343434 gui=none

" Syntax highlighting
"hi Comment 		guifg=#99968b gui=italic
"hi Todo 		guifg=#8f8f8f gui=italic
"hi Constant 	guifg=#e5786d gui=none
"hi String 		guifg=#95e454 gui=italic
"hi Identifier 	guifg=#cae682 gui=none
"hi Function 	guifg=#cae682 gui=none
"hi Type 		guifg=#cae682 gui=none
"hi Statement 	guifg=#8ac6f2 gui=none
"hi Keyword		guifg=#8ac6f2 gui=none
"hi PreProc 		guifg=#e5786d gui=none
"hi Number		guifg=#e5786d gui=none
"hi Special		guifg=#e7f6da gui=none
